@page "/hotel-room/create"
@using Models
@using Business.Repository.IRepository
@inject IHotelRoomRepository _HotelRoomRepository
@inject NavigationManager _NavigationManager

<div class="row mt-2 mb-5">
    <h3 class="card-title text-info mb-3 ml-3">@Title Hotel Room</h3>
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">

                <EditForm Model="@HotelRoomModel" OnValidSubmit="HandleHotelRoomSubmit">

                    <DataAnnotationsValidator/>
                    @* <ValidationSummary /> *@

                    <div class="form-group">
                        <label>Name</label>
                        <InputText @bind-Value="HotelRoomModel.Name" class="form-control"></InputText>
                        <ValidationMessage For="() => HotelRoomModel.Name"/>
                    </div>

                    <div class="form-group">
                        <label>Occupancy</label>
                        <InputNumber @bind-Value="HotelRoomModel.Occupancy" class="form-control"></InputNumber>
                        <ValidationMessage For="() => HotelRoomModel.Occupancy"/>
                    </div>

                    <div class="form-group">
                        <label>Regular Rate</label>
                        <InputNumber @bind-Value="HotelRoomModel.RegularRate" class="form-control"></InputNumber>
                        <ValidationMessage For="() => HotelRoomModel.RegularRate"/>
                    </div>

                    <div class="form-group">
                        <label>Sq feet</label>
                        <InputText @bind-Value="HotelRoomModel.SqFt" class="form-control"></InputText>
                        <ValidationMessage For="() => HotelRoomModel.SqFt"/>
                    </div>

                    <div class="form-group">
                        <label>Description</label>
                        <InputTextArea @bind-Value="HotelRoomModel.Details" class="form-control"></InputTextArea>
                        <ValidationMessage For="() => HotelRoomModel.Details"/>
                    </div>

                    <div class="form-group">
                        <button class="btn btn-outline-success btn-group">@Title Room</button>
                        <NavLink href="hotel-room" class="btn btn-outline-secondary btn-group">Go Back</NavLink>
                    </div>


                </EditForm>

            </div>
        </div>
    </div>
</div>

@code
{
    private HotelRoomDTO HotelRoomModel { get; set; } = new HotelRoomDTO();
    private string Title { get; set; } = "Create";

    private async Task HandleHotelRoomSubmit()
    {
        // we can access the variables through the model
        var roomDetailByName = await _HotelRoomRepository.IsRoomUnique(HotelRoomModel.Name);

        if (roomDetailByName != null)
        {
            // room with that name already exists
            return;
        }

        var createdResult = await _HotelRoomRepository.CreateHotelRoom(HotelRoomModel);
        
        // Navigate back to the index page
        _NavigationManager.NavigateTo("hotel-room");
    }
}